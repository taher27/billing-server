// Test generated by RoostGPT for test Test28Sept using AI Type Open AI and AI Model gpt-4

const request = require('supertest');
const express = require('express');
const CustomerModel = require('../models/customer');
const router = express.Router();

router.get("/:id", async (req, res) => {
  try {
    const customer = await CustomerModel.findById(req.params.id);
    res.json(customer);
  } catch (err) {
    res.send("Error " + err);
  }
})

const app = express();
app.use(router);

jest.mock('../models/customer');

describe('GET /:id', () => {
  afterEach(() => {
    jest.resetAllMocks();
  });

  test('should return a customer by id', async () => {
    const mockCustomer = { id: '1', name: 'John Doe' };
    CustomerModel.findById.mockResolvedValue(mockCustomer);

    const response = await request(app).get('/1');

    expect(response.statusCode).toBe(200);
    expect(response.body).toEqual(mockCustomer);
    expect(CustomerModel.findById).toHaveBeenCalledWith('1');
  });

  test('should return an error if retrieving customer fails', async () => {
    CustomerModel.findById.mockRejectedValue(new Error('Test Error'));

    const response = await request(app).get('/1');

    expect(response.statusCode).toBe(200);
    expect(response.text).toEqual('Error Test Error');
    expect(CustomerModel.findById).toHaveBeenCalledWith('1');
  });
});
