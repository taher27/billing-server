// Test generated by RoostGPT for test Test28Sept using AI Type Open AI and AI Model gpt-4

const request = require('supertest');
const express = require('express');
const CustomerModel = require("../models/customer");

const app = express();
app.use('/:id', (req, res, next) => {
  CustomerModel.findById(req.params.id)
    .then(customer => res.json(customer))
    .catch(err => res.send("Error " + err));
});

describe('Testing the Customer API', () => {

  beforeAll(() => {
    jest.spyOn(CustomerModel, 'findById');
  });

  afterEach(() => {
    CustomerModel.findById.mockClear();
  });

  it('tests if the CustomerModel.findById is called with the correct id', async () => {
    await request(app).get('/123');
    expect(CustomerModel.findById).toHaveBeenCalledWith('123');
  });

  it('tests if the CustomerModel.findById returns the correct data', async () => {
    CustomerModel.findById.mockResolvedValue({ id: '123', name: 'John Doe' });
    const response = await request(app).get('/123');
    expect(response.body).toEqual({ id: '123', name: 'John Doe' });
  });

  it('tests if the CustomerModel.findById handles error correctly', async () => {
    CustomerModel.findById.mockRejectedValue(new Error('Async error'));
    const response = await request(app).get('/123');
    expect(response.text).toBe('Error Async error');
  });
});
